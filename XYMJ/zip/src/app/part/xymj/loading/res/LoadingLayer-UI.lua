--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create touch_mask
local touch_mask = ccui.Button:create()
touch_mask:ignoreContentAdaptWithSize(false)
touch_mask:loadTextureDisabled("Default/Button_Disable.png",0)
touch_mask:setTitleFontSize(14)
touch_mask:setTitleColor({r = 65, g = 65, b = 70})
touch_mask:setScale9Enabled(true)
touch_mask:setCapInsets({x = -15, y = -4, width = 30, height = 8})
touch_mask:setLayoutComponentEnabled(true)
touch_mask:setName("touch_mask")
touch_mask:setTag(7)
touch_mask:setCascadeColorEnabled(true)
touch_mask:setCascadeOpacityEnabled(true)
touch_mask:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(touch_mask)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
Layer:addChild(touch_mask)

--Create animate_node
local animate_node=cc.Node:create()
animate_node:setName("animate_node")
animate_node:setTag(166)
animate_node:setCascadeColorEnabled(true)
animate_node:setCascadeOpacityEnabled(true)
animate_node:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(animate_node)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(640.0000)
layout:setRightMargin(640.0000)
layout:setTopMargin(360.0000)
layout:setBottomMargin(360.0000)
Layer:addChild(animate_node)

--Create loading
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
local loading = cc.Sprite:createWithSpriteFrameName("app/part/xymj/loading/res/loading1.png")
loading:setName("loading")
loading:setTag(15)
loading:setCascadeColorEnabled(true)
loading:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(loading)
layout:setSize({width = 100.0000, height = 100.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(-50.0000)
layout:setRightMargin(-50.0000)
layout:setTopMargin(-50.0000)
layout:setBottomMargin(-50.0000)
loading:setBlendFunc({src = 1, dst = 771})
animate_node:addChild(loading)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(80)
result['animation']:setTimeSpeed(1.0000)

--Create FileDataTimeline
local FileDataTimeline = ccs.Timeline:create()

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading1.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(10)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading2.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(20)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading3.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(30)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading4.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(40)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading5.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(50)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading6.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(60)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading7.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(70)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading8.png")
FileDataTimeline:addFrame(localFrame)

localFrame = ccs.TextureFrame:create()
localFrame:setFrameIndex(80)
localFrame:setTween(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("app/part/xymj/loading/res/loading_picture.plist")
localFrame:setTextureName("app/part/xymj/loading/res/loading1.png")
FileDataTimeline:addFrame(localFrame)

result['animation']:addTimeline(FileDataTimeline)
FileDataTimeline:setNode(loading)
--Create Animation List
local StartLoading = {name="StartLoading", startIndex=0, endIndex=80}
result['animation']:addAnimationInfo(StartLoading)

result['root'] = Layer
return result;
end

return Result

