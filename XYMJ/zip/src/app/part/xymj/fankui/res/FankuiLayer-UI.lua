--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create touch_mask
local touch_mask = ccui.Button:create()
touch_mask:ignoreContentAdaptWithSize(false)
touch_mask:loadTextureDisabled("Default/Button_Disable.png",0)
touch_mask:setTitleFontSize(14)
touch_mask:setTitleColor({r = 65, g = 65, b = 70})
touch_mask:setScale9Enabled(true)
touch_mask:setCapInsets({x = -15, y = -4, width = 30, height = 8})
touch_mask:setLayoutComponentEnabled(true)
touch_mask:setName("touch_mask")
touch_mask:setTag(53)
touch_mask:setCascadeColorEnabled(true)
touch_mask:setCascadeOpacityEnabled(true)
touch_mask:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(touch_mask)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
Layer:addChild(touch_mask)

--Create bg
local bg = ccui.ImageView:create()
bg:ignoreContentAdaptWithSize(false)
bg:loadTexture("app/part/xymj/fankui/res/backg.png",0)
bg:setLayoutComponentEnabled(true)
bg:setName("bg")
bg:setTag(21)
bg:setCascadeColorEnabled(true)
bg:setCascadeOpacityEnabled(true)
bg:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.8328)
layout:setPercentHeight(0.8694)
layout:setSize({width = 1066.0000, height = 626.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(1)
layout:setLeftMargin(107.0000)
layout:setRightMargin(107.0000)
layout:setTopMargin(47.0000)
layout:setBottomMargin(47.0000)
Layer:addChild(bg)

--Create text_field_bg
local text_field_bg = ccui.ImageView:create()
text_field_bg:ignoreContentAdaptWithSize(false)
text_field_bg:loadTexture("app/part/xymj/fankui/res/srk_01.png",0)
text_field_bg:setScale9Enabled(true)
text_field_bg:setCapInsets({x = 15, y = 15, width = 961, height = 467})
text_field_bg:setLayoutComponentEnabled(true)
text_field_bg:setName("text_field_bg")
text_field_bg:setTag(53)
text_field_bg:setCascadeColorEnabled(true)
text_field_bg:setCascadeOpacityEnabled(true)
text_field_bg:setPosition(533.0032, 312.9992)
text_field_bg:setScaleX(0.9179)
text_field_bg:setScaleY(0.8030)
layout = ccui.LayoutComponent:bindLayoutComponent(text_field_bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.9775)
layout:setPercentHeight(0.9617)
layout:setSize({width = 1042.0000, height = 602.0000})
layout:setLeftMargin(12.0032)
layout:setRightMargin(11.9968)
layout:setTopMargin(12.0008)
layout:setBottomMargin(11.9992)
bg:addChild(text_field_bg)

--Create text_field
local text_field = ccui.TextField:create()
text_field:ignoreContentAdaptWithSize(false)
tolua.cast(text_field:getVirtualRenderer(), "cc.Label"):setLineBreakWithoutSpace(true)
text_field:setFontSize(20)
text_field:setPlaceHolder("真诚邀请您写下意见和建议，我们将会非常重视，谢谢您！")
text_field:setString([[]])
text_field:setMaxLength(10)
text_field:setLayoutComponentEnabled(true)
text_field:setName("text_field")
text_field:setTag(51)
text_field:setCascadeColorEnabled(true)
text_field:setCascadeOpacityEnabled(true)
text_field:setPosition(521.0000, 316.3426)
text_field:setColor({r = 139, g = 105, b = 20})
if callBackProvider~=nil then
      text_field:addEventListener(callBackProvider("FankuiLayer-UI.lua", text_field, "onTextfieldCallback"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(text_field)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5255)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(0.9000)
layout:setPercentHeight(0.8000)
layout:setSize({width = 937.8000, height = 481.6000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(52.1000)
layout:setRightMargin(52.1000)
layout:setTopMargin(44.8574)
layout:setBottomMargin(75.5426)
text_field_bg:addChild(text_field)

--Create title_bg
local title_bg = ccui.ImageView:create()
title_bg:ignoreContentAdaptWithSize(false)
title_bg:loadTexture("app/part/xymj/fankui/res/dialog_title_bg.png",0)
title_bg:setLayoutComponentEnabled(true)
title_bg:setName("title_bg")
title_bg:setTag(372)
title_bg:setCascadeColorEnabled(true)
title_bg:setCascadeOpacityEnabled(true)
title_bg:setPosition(533.0000, 591.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(title_bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.9441)
layout:setPercentWidth(0.7908)
layout:setPercentHeight(0.1550)
layout:setSize({width = 843.0000, height = 97.0000})
layout:setLeftMargin(111.5000)
layout:setRightMargin(111.5000)
layout:setTopMargin(-13.5000)
layout:setBottomMargin(542.5000)
bg:addChild(title_bg)

--Create title_text
local title_text = ccui.ImageView:create()
title_text:ignoreContentAdaptWithSize(false)
title_text:loadTexture("app/part/xymj/fankui/res/wz_fankui.png",0)
title_text:setLayoutComponentEnabled(true)
title_text:setName("title_text")
title_text:setTag(373)
title_text:setCascadeColorEnabled(true)
title_text:setCascadeOpacityEnabled(true)
title_text:setPosition(421.5000, 58.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(title_text)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5979)
layout:setPercentWidth(0.1305)
layout:setPercentHeight(0.2784)
layout:setSize({width = 110.0000, height = 27.0000})
layout:setLeftMargin(366.5000)
layout:setRightMargin(366.5000)
layout:setTopMargin(25.5000)
layout:setBottomMargin(44.5000)
title_bg:addChild(title_text)

--Create close_btn
local close_btn = ccui.Button:create()
close_btn:ignoreContentAdaptWithSize(false)
close_btn:loadTextureNormal("app/part/xymj/fankui/res/btn_close.png",0)
close_btn:loadTextureDisabled("Default/Button_Disable.png",0)
close_btn:setTitleFontSize(14)
close_btn:setTitleColor({r = 65, g = 65, b = 70})
close_btn:setScale9Enabled(true)
close_btn:setCapInsets({x = 15, y = 11, width = 52, height = 60})
close_btn:setLayoutComponentEnabled(true)
close_btn:setName("close_btn")
close_btn:setTag(22)
close_btn:setCascadeColorEnabled(true)
close_btn:setCascadeOpacityEnabled(true)
close_btn:setPosition(1057.1900, 611.7600)
if callBackProvider~=nil then
      close_btn:addClickEventListener(callBackProvider("FankuiLayer-UI.lua", close_btn, "CloseClick"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(close_btn)
layout:setPositionPercentX(0.9917)
layout:setPositionPercentY(0.9773)
layout:setPercentWidth(0.0769)
layout:setPercentHeight(0.1310)
layout:setSize({width = 82.0000, height = 82.0000})
layout:setLeftMargin(1016.1900)
layout:setRightMargin(-32.1899)
layout:setTopMargin(-26.7600)
layout:setBottomMargin(570.7600)
bg:addChild(close_btn)

--Create button_send
local button_send = ccui.Button:create()
button_send:ignoreContentAdaptWithSize(false)
button_send:loadTextureNormal("app/part/xymj/fankui/res/send_normal.png",0)
button_send:loadTexturePressed("app/part/xymj/fankui/res/send_pressed.png",0)
button_send:loadTextureDisabled("Default/Button_Disable.png",0)
button_send:setTitleFontSize(14)
button_send:setTitleColor({r = 65, g = 65, b = 70})
button_send:setScale9Enabled(true)
button_send:setCapInsets({x = 15, y = 11, width = 153, height = 52})
button_send:setLayoutComponentEnabled(true)
button_send:setName("button_send")
button_send:setTag(52)
button_send:setCascadeColorEnabled(true)
button_send:setCascadeOpacityEnabled(true)
button_send:setAnchorPoint(1.0000, 0.0000)
button_send:setPosition(1023.7000, 1.5700)
if callBackProvider~=nil then
      button_send:addClickEventListener(callBackProvider("FankuiLayer-UI.lua", button_send, "onSendClick"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(button_send)
layout:setPositionPercentX(0.9603)
layout:setPositionPercentY(0.0025)
layout:setPercentWidth(0.1717)
layout:setPercentHeight(0.1182)
layout:setSize({width = 183.0000, height = 74.0000})
layout:setHorizontalEdge(2)
layout:setVerticalEdge(1)
layout:setLeftMargin(840.7000)
layout:setRightMargin(42.3000)
layout:setTopMargin(550.4300)
layout:setBottomMargin(1.5700)
bg:addChild(button_send)

--Create text_field_down_bg
local text_field_down_bg = ccui.ImageView:create()
text_field_down_bg:ignoreContentAdaptWithSize(false)
text_field_down_bg:loadTexture("app/part/xymj/fankui/res/srk_01.png",0)
text_field_down_bg:setScale9Enabled(true)
text_field_down_bg:setCapInsets({x = 15, y = 15, width = 961, height = 467})
text_field_down_bg:setLayoutComponentEnabled(true)
text_field_down_bg:setName("text_field_down_bg")
text_field_down_bg:setTag(11)
text_field_down_bg:setCascadeColorEnabled(true)
text_field_down_bg:setCascadeOpacityEnabled(true)
text_field_down_bg:setPosition(640.0000, 25.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(text_field_down_bg)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.0347)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.0694)
layout:setSize({width = 1280.0000, height = 50.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(1)
layout:setTopMargin(670.0000)
Layer:addChild(text_field_down_bg)

--Create text_field_down
local text_field_down = ccui.TextField:create()
text_field_down:ignoreContentAdaptWithSize(false)
tolua.cast(text_field_down:getVirtualRenderer(), "cc.Label"):setLineBreakWithoutSpace(true)
text_field_down:setFontSize(24)
text_field_down:setPlaceHolder("真诚邀请您写下意见和建议，我们将会非常重视，谢谢您！")
text_field_down:setString([[]])
text_field_down:setMaxLength(10)
text_field_down:setTouchEnabled(false);
text_field_down:setLayoutComponentEnabled(true)
text_field_down:setName("text_field_down")
text_field_down:setTag(10)
text_field_down:setCascadeColorEnabled(true)
text_field_down:setCascadeOpacityEnabled(true)
text_field_down:setPosition(640.0000, 25.0000)
text_field_down:setColor({r = 139, g = 105, b = 20})
layout = ccui.LayoutComponent:bindLayoutComponent(text_field_down)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.0347)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.0694)
layout:setSize({width = 1280.0000, height = 50.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(1)
layout:setTopMargin(670.0000)
Layer:addChild(text_field_down)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

